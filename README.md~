# Lazinize transforms OCaml evaluation strategy into Haskell one

OCaml evaluation strategy is called *call by value*, or more generally
*eager evalulation*. Haskell one is called *call by name*, or more
precisely *call by need*, or more generally *lazy evaluation*.

In *call by value* strategy, arguments of a function call are
evaluated *before* the function body evaluation.

In *call by name* strategy, arguments are evaluated once they are used
during the function body evaluation.



## MongoManager

MongoManager is a Python library launching, stopping, managing MongoDB cluster in a few lines of code.

* **Easy:** Just one class to start and manage a whole MongoDB cluster.
* **Flexible:** Can creates mongod/s processes or plug on them.
* **Clear:** Every step is clearly mentionned in a log or at the screen.

## Examples

```python
# Prepare data and log directories
cluster = MongoCluster().initialize()

# Start the whole cluster on all wanted machines
cluster.start()

# Stop the cluster
cluster.stop()

# Clean the directories
cluster.clean()

```

This example will start a cluster with default configuration (1 config replica set, 2 data replica sets, with a replica factor of 3).

```python
# One line style
cluster = MongoCluster.initialize().start()
cluster.stop().clean()
```

## Installation

It's a python module. Import it.

## License

MongoManager is made under the terms of the MIT license.

